class Solution {//T.C->O(n) S.C->O(n)
    public int findDuplicate(int[] nums) {
       HashSet<Integer>set = new HashSet<>();
       for(int n :nums){
        if(!set.add(n)) return n;
       }
    return -1;
    }
}


APPROACH 2
class Solution {//T.C->O(n) S.C->O(n)
    public int findDuplicate(int[] nums) {  
     int slow = 0 , fast = 0; 
     do{
        slow = nums[slow];
        fast = nums[nums[fast]];
     }
     while(slow != fast){
        slow = 0;
     while(slow != fast){
        slow = nums[slow];
        fast = nums[fast];
        }
        return slow;
    }
    }
}


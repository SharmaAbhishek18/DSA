public class Solution {//T.C -> O(N) S.C -> O(1) 
    public static boolean isAnagram(String s, String t) {

       HashMap<Character,Integer> map = new HashMap<>();
       if(s.length() != t.length()) return false;
       
       for(int  i = 0; i < s.length(); i++){
            char ss = s.charAt(i);
            char tt = t.charAt(i);

            map.put(ss,map.getOrDefault(ss,0)+1);
            map.put(tt,map.getOrDefault(tt,0)-1);
        }   
        for(int i : map.values()){
            if(i != 0) return false;
        }
    return true;
    }
}

APPROACH  -2


public class Solution {//T.C -> O(N) S.C -> O(1) 
    public static boolean isAnagram(String s, String t) {

       if(s.length() != t.length()) return false;
       
       int [] count = new int[26];
       for(int i = 0; i < s.length(); i++ ){
            count[s.charAt(i) - 'a']++;
            count[t.charAt(i) - 'a']--;
       }
        for(int num : count){
            if(num != 0) return false;
        
        }
        return true;
    }
}
